name: upgrade, lint, format, patch, test, release
on: [push]
jobs:
  upgrade-lint-patch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn ci:upgrade
      - run: |
          git config --local user.email "action@github.com"
          git config --local user.name "CI: Upgrade"
          git add --all
          git diff-index --quiet HEAD || git commit -m "ci(upgrade): Upgrade dependencies"
      - run: yarn ci:lint
      - run: yarn ci:format
      - run: |
          git config --local user.email "action@github.com"
          git config --local user.name "CI: Lint"
          git add --all
          git diff-index --quiet HEAD || git commit -m "ci(lint): Lint & Format"
      - run: yarn ci:patch
      - run: |
          git config --local user.email "action@github.com"
          git config --local user.name "CI: Patch"
          git add --all
          git diff-index --quiet HEAD || git commit -m "ci(patch): Version"
          git push "https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git" HEAD:main
          git push "https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git" HEAD:main --tags
  test:
    needs: upgrade-lint-patch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn ci:build
      - run: yarn ci:test
      #- run: bash <(curl -s https://codecov.io/bash) -X gcov -Z
  create-release:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@master
      - uses: Roang-zero1/github-create-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
